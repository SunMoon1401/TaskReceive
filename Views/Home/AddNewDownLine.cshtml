@model TaskReceiverMVC.Models.GUIModel
@{
	ViewBag.Title = "AddNewDownLine";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title></title>
	<link rel="stylesheet" href="/Bootstrap/Bootstrap/css/bootstrap.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
	<script src="/css/JavaScript.js"></script>
</head>
<body>
	<div class="container">
		@using (Html.BeginForm("AddNewDownLine", "Home", FormMethod.Post))
		{
			<!-- ----------- Header Start ----------- -->
			<div class="row header">
				TẠO TÀI KHOẢN TUYẾN DƯỚI
			</div>
			<!-- ----------- Header End ----------- -->
			<!-- ----------- Main Start ----------- -->
			<div class="row main">
				<div class="col">
					<div class="row">
						<div class="col-4">
							WebSite:
								@*@Html.DropDownListFor(model => model.DropDownListWed,
						new SelectList(Enum.GetValues(typeof(TaskReceiverMVC.Models.DropWeb))),
						"3IN1"*@
							<span value="website">3IN1</span>
						</div>
						<div class="col-8">
							Số lượng tài khoản:
							@Html.TextBoxFor(model => model.AccountNumber, new { type = "number", min = "0", max = "100" })
						</div>
					</div>
					<div class="row info">
						<div class="r1 form-control">
							<div class="col title-tables">
								THÔNG TIN CHUNG
							</div>
							@*<label class="row allable text1">
								@Html.Label("Username : ", htmlAttributes: new { @class = "text-nowrap" })<i>Jhin</i>
								<select value="checkboxWebsite">
									<option>0</option>
									<option>1</option>
									<option>2</option>
									<option>3</option>
									<option>4</option>
									<option>5</option>
									<option>6</option>
									<option>7</option>
									<option>8</option>
									<option>9</option>
								</select>
								<select value="checkboxWebsite">
									<option>0</option>
									<option>1</option>
									<option>2</option>
									<option>3</option>
									<option>4</option>
									<option>5</option>
									<option>6</option>
									<option>7</option>
									<option>8</option>
									<option>9</option>
								</select>
								<select class = "checkboxWebsite3IN1">
									<option>0</option>
									<option>1</option>
									<option>2</option>
									<option>3</option>
									<option>4</option>
									<option>5</option>
									<option>6</option>
									<option>7</option>
									<option>8</option>
									<option>9</option>
								</select>
								@Html.CheckBoxFor(model => model.IsChecked, new { id = "checkboxuser", value = "checkboxWebsite" })
								<label> Tự động</label>
							</label>*@

						<div class="boxtextname">
							@Html.Label("Username : ", htmlAttributes: new { @class = "text-nowrap" })<i>Jhinali</i>
							<select value="checkboxWebsite">
								<option>Select</option>
								<option>0</option>
								<option>1</option>
								<option>2</option>
								<option>3</option>
								<option>4</option>
								<option>5</option>
								<option>6</option>
								<option>7</option>
								<option>8</option>
								<option>9</option>
							</select>
							<select value="checkboxWebsite">
								<option>Select</option>
								<option>0</option>
								<option>1</option>
								<option>2</option>
								<option>3</option>
								<option>4</option>
								<option>5</option>
								<option>6</option>
								<option>7</option>
								<option>8</option>
								<option>9</option>
							</select>
							<select class="checkboxWebsite3IN1">
								<option>Select</option>
								<option>0</option>
								<option>1</option>
								<option>2</option>
								<option>3</option>
								<option>4</option>
								<option>5</option>
								<option>6</option>
								<option>7</option>
								<option>8</option>
								<option>9</option>
							</select>
							@Html.CheckBoxFor(model => model.IsChecked, new { id = "checkboxuser", value = "checkboxWebsite" })
							<label> Tự động</label>
						</div>
							<div class="form-group allable">
								<div class="box">
									@Html.Label("PassWord : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.PasswordFor(model => model.PassWord, new
									{
										htmlAttributes = new
							   {
									@class = "form-control",
									@required = "required",
									@type="password",
									@MaxLength = "300",
									@pattern = "^[a-zA-Z0-9!@#$%^&*()-_+=[]{};:'?/<>.,]*",
									@oninvalid = "this.setCustomValidity('Thử lại, mật khẩu cần có ít nhất một kí tự hoa, thường và 1 chữ số')",
									@oninput = "setCustomValidity('')"
									}
							})
									@Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="form-group allable">
								<div class="box">
									@Html.Label("FirstName : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.EditorFor(model => model.FirstName, new
							   {
								   htmlAttributes = new
								   {
									   @class = "form-control ",
									   @required = "required",
									   @MaxLength = "300",
									   @pattern = "^[a-zA-Z0-9!@#$%^&*()-_+=[]{};:'?/<>.,]*",
									   @oninvalid = "this.setCustomValidity('Vui lòng nhập tên')",
									   @oninput = "setCustomValidity('')"
								   }
							   })
									@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="form-group allable">
								<div class="box">
									@Html.Label("LastName : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.EditorFor(model => model.LastName, new
							   {
								   htmlAttributes = new
								   {
									   @class = "form-control ",
									   @required = "required",
									   @MaxLength = "300",
									   @pattern = "^[a-zA-Z0-9!@#$%^&*()-_+=[]{};:'?/<>.,]*",
									   @oninvalid = "this.setCustomValidity('Vui lòng nhập tên')",
									   @oninput = "setCustomValidity('')"
								   }
							   })
									@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
						<div class="r2 form-control">
							<div class="col title-tables">
								CREDIT
							</div>
							<br />
							<div class="form-group allable">
								<div class="boxa">
									@Html.Label(" (AG) Total Credit : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.TotalCredit, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
							<div class="form-group allable">
								<div class="boxa">
									@Html.Label(" (MEM) Max Credit Limit : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxCreditLimit, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
						</div>
					</div>
					<div class="row info">
						<div class="r1 form-control">
							<div class="row title-tables">
								COMMISSION
							</div>
							<div class="row commission">
								@Html.RadioButtonFor(model => model.Commission,"0.0025")
								<label for="radio" class="radio-button">0.0025</label>
								@Html.RadioButtonFor(model => model.Commission, "0")
								<label for="radio" class="radio-button">0</label>
							</div>
						</div>
						<div class="r2">
						</div>
					</div>
					<div class="row info">
						<div class="r1 form-control">
							<div class="col title-tables">
								MAIN BET LIMIT
							</div>
							<br />
							<div class="form-group allable">
								<div class="box">
									@Html.Label(" Max Per Bet : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxPerBet, new { type = "number", min = "0", max = "100", @class="form-control "})
								</div>
							</div>
							<div class="form-group allable">
								<div class="box">
									@Html.Label(" Max Bet Match : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxBetMatch, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
						</div>
						<div class="r2 form-control">
							<div class="col title-tables">
								SUB BET LIMIT
							</div>
							<div class="form-group allable">
								<div class="boxa">
									@Html.Label(" Max Per Bet : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxPerBet, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
							<div class="form-group allable">
								<div class="boxa">
									@Html.Label(" Max Bet Match : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxBetMatch, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
							<div class="form-group allable">
								<div class="boxa">
									@Html.Label(" Max Bet Number Game : ", htmlAttributes: new { @class = "text-nowrap" })
									@Html.TextBoxFor(model => model.MaxBetNumberGame, new { type = "number", min = "0", max = "100", @class = "form-control " })
								</div>
							</div>
						</div>
					</div>
					<div class="row">
						@Html.CheckBox("IsChecked", new { value = "chkFirstLogin" })
						<label for="checkbox"> Đăng nhập lần đầu =></label>
						@Html.CheckBox("IsChecked", new { value = "chkCreateSub" })
						<label for="checkbox"> Tạo sub =></label>
						@Html.CheckBox("IsChecked", new { value = "chkFirstLoginSub" })
						<label for="checkbox"> Đăng nhập sub lần đầu </label>
					</div>
					<div class="btn-nut">
						<a href="@Url.Action("Index","Home")" type="reset" data-toggle="tooltip" data-placement="top" title="Trở về" class="btn btn-danger">TRỞ VỀ </a>
						<button type="submit" data-toggle="tooltip" data-placement="top" title="Tạo tài khoản" class="btn btn-success">TẠO TÀI KHOẢN</button>
					</div>
				</div>
			</div>
		<!-- ----------- Main End ----------- -->
		<div class="row footer">
		</div>
	}
	</div>
	</body>
</html>